import t,{div as e}from"/Utils/elements.js";import{Component as r,createRef as s,useRef as i}from"/cdn/react";import{Globals as a}from"/Views/index.js";import o from"/Components/card-template/keyword-renderer.js";import n from"/Components/card-template/image-render.js";import p,{scaleFontSize as h}from"/Components/card-template/effect-text.js";import c from"/Utils/load-css.js";import l from"/Components/card-template/svg-wrap.js";import m from"/cdn/fitty";import f from"/Utils/datauri.js";import{defaultShade as d}from"/Views/list.js";import u from"/Utils/debounce-function.js";import g from"/Utils/concurrency-manager.js";import y from"/Utils/use-debounce-effect.js";const U=c("/Components/card-template/unit.css");export class UnitRendererComponent extends r{clipPathPolygon=[[25,50],[655,50],[655,950],[340,965],[25,950]];state={};cardFrame="/Assets/champion/frame1.png";clanFrame="/Assets/champion/typing-2.png";regionPosition="champion";static get contextType(){return a}constructor(t){super(t),this.clanRef=s(),this.costRef=s(),this.powerRef=s(),this.healthRef=s(),this.nameRef=s(),this.cardTextWrapperRef=s();const e=g();this.fitName=u((()=>{this.nameRef.current&&e.concurrent((()=>h(this.nameRef.current,70,16)))})),this.fitCost=u((()=>{this.costRef.current&&(this.costFitty?this.costFitty.fit():this.costFitty=m(this.costRef.current,{multiLine:!1,maxSize:90}))})),this.fitPower=u((()=>{this.powerRef.current&&(this.powerFitty?this.powerFitty.fit():this.powerFitty=m(this.powerRef.current,{multiLine:!1,maxSize:70}))})),this.fitHealth=u((()=>{this.healthRef.current&&(this.healthFitty?this.healthFitty.fit():this.healthFitty=m(this.healthRef.current,{multiLine:!1,maxSize:70}))})),this.scaleText=u((()=>{this.cardTextWrapperRef.current&&e.sequential((()=>h(this.cardTextWrapperRef.current)))}),300)}getRegionFrameUrl(){let t=this.props.faction.length;return t>3&&(t=3),`/Assets/champion/lvl1regionbox${t}.png`}componentDidMount(){const{fitCost:t,fitPower:e,fitHealth:r,fitName:s}=this;if(t(),e(),r(),s(),this.fetchUrlAsUriAndStoreInState("/Assets/champion/backdrop.png","backdropUri"),this.fetchUrlAsUriAndStoreInState(this.cardFrame,"frameUri"),this.fetchUrlAsUriAndStoreInState(this.clanFrame,"clanFrameUri"),this.props.rarity&&"gemless"!==this.props.rarity&&this.fetchUrlAsUriAndStoreInState(`/Assets/shared/gem${this.props.rarity}.png`,"rarityUri"),this.props.faction&&this.props.faction.length){const t=this.props.faction.map((t=>f(`/Assets/region/${t}.png`)));Promise.all(t).then((t=>{this.setState((e=>({...e,factionUri:t})))})),this.fetchUrlAsUriAndStoreInState(this.getRegionFrameUrl(),"regionFrameUri")}}fetchUrlAsUriAndStoreInState(t,e){f(t).then((t=>{this.setState((r=>({...r,[e]:t})))}))}componentDidUpdate(t,e){const{clan:r,cost:s,power:i,health:a,name:o,effectText:n,lvup:p,keywords:h}=this.props,{fitCost:c,fitPower:l,fitHealth:m,fitName:d,scaleText:u}=this,g=!!this.state.frameUri!=!!e.frameUri,y=!!t.name!==o||!(!t.keywords||!t.keywords.length)!=!(!h||!h.length)||t.effectText!==n||t.lvup!==p;if((t.cost!==s||g)&&c(),(t.power!==i||g)&&l(),(t.health!==a||g)&&m(),(t.name!==o||g)&&d(),(y||g)&&u(),t.rarity!==this.props.rarity&&"gemless"!==this.props.rarity&&"none"!==this.props.rarity&&this.fetchUrlAsUriAndStoreInState(`/Assets/shared/gem${this.props.rarity}.png`,"rarityUri"),this.props.faction&&this.props.faction.length&&t.faction!==this.props.faction){const t=this.props.faction.map((t=>f(`/Assets/region/${t}.png`)));Promise.all(t).then((t=>{this.setState((e=>({...e,factionUri:t})))})),this.fetchUrlAsUriAndStoreInState(this.getRegionFrameUrl(),"regionFrameUri")}}render(){const t=this.props.shade||d,[r,s]=t.gradientLocation;return l({loading:!this.state.frameUri||this.props.loading,onTransform:this.props.updateTransform,...this.props.transform||{x:0,y:0,scale:1}},this.state.frameUri?e({style:{"--background-image":!this.props.art&&this.state.backdropUri&&this.context.state.defaultBg?`url(${this.state.backdropUri||""})`:"none","--scale":this.props.transform?this.props.transform.scale:1,"--left":this.props.transform?this.props.transform.x:0,"--top":this.props.transform?this.props.transform.y:0,"--blur":`${t.blur}px`,"--darkness":t.darkness,"--transparent-percent":r+"%","--solid-percent":s+"%"},className:`unit ${this.regionPosition}`,id:this.props.id},e({className:"art",style:{clipPath:`polygon(${this.clipPathPolygon.map((t=>t.map((t=>t+"px")).join(" "))).join(",")})`}},e({className:"scale-adjuster"},n({url:this.props.art}))),e({className:"art blur",style:{clipPath:`polygon(${this.clipPathPolygon.map((t=>t.map((t=>t+"px")).join(" "))).join(",")})`}},e({className:"scale-adjuster"},n({url:this.props.art}))),e({className:"frame",style:{backgroundImage:this.state.frameUri?`url(${this.state.frameUri||""})`:"none"}}),e({className:"card-text-wrapper",ref:this.cardTextWrapperRef},this.props.name?e({className:"name fitty-wrap card-text-bold card-text-outline",ref:this.nameRef},this.props.name):void 0,this.props.keywords&&this.props.keywords.length?e({className:"keyword-container card-text-bold"},this.props.keywords.map((t=>o("string"==typeof t?{key:t,name:t,size:this.props.keywords.length>1?"small":"large"}:{name:t.name,icons:t.icons,key:t.id,size:this.props.keywords.length>1?"small":"large"})))):void 0,p({blueWords:this.props.blueWords,orangeWords:this.props.orangeWords,className:"effect-container card-text-universe",effectText:this.props.effect,levelText:this.props.lvup})),e({className:"cost fitty-nowrap card-text-bold card-text-outline",ref:this.costRef},this.props.mana),this.props.faction&&this.props.faction.length?e({className:"region-frame",style:{backgroundImage:this.state.regionFrameUri?`url(${this.state.regionFrameUri||""})`:"none"}},this.state.factionUri?this.state.factionUri.map((t=>e({key:t,className:"region-icon",style:{backgroundImage:`url(${t})`}}))):null):void 0,this.props.clan&&this.props.clan.length?e({className:"clan",style:{backgroundImage:this.state.clanFrameUri?`url(${this.state.clanFrameUri||""})`:"none"}},this.props.clan.map(((t,e)=>AutoFitClanText({key:e,multiple:this.props.clan.length>1},t)))):void 0,void 0!==this.props.power?e({className:"power fitty-nowrap card-text-bold card-text-outline",ref:this.powerRef},this.props.power):void 0,void 0!==this.props.health?e({className:"health fitty-nowrap card-text-bold card-text-outline",ref:this.healthRef},this.props.health):void 0,this.props.rarity&&"gemless"!==this.props.rarity&&"none"!==this.props.rarity?e({className:"rarity "+this.props.rarity,style:{backgroundImage:this.state.rarityUri?`url(${this.state.rarityUri||""})`:"none"}}):void 0):void 0)}}export function AutoFitClanTextComponent(t){const r=i();return y((()=>{h(r.current,32,16)}),200,[t.children,t.multiple]),e({className:"card-text-universe-condensed card-text-outline text-area fitty-nowrap",ref:r},t.children)}export const AutoFitClanText=t(AutoFitClanTextComponent);export default t(UnitRendererComponent,U);