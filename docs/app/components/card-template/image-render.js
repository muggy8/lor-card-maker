import e,{div as t}from"/Utils/elements.js";import a from"/Utils/load-css.js";import i from"/Utils/set-immediate-batch.js";import n from"/Utils/use-asset-cache.js";import{useEffect as o,useContext as h}from"/cdn/react";import{Globals as r}from"/Views/index.js";const s=a("/Components/card-template/image-render.css");function m(e){return new Promise((t=>{const a=new Image;a.addEventListener("load",(()=>{t({width:a.width,height:a.height,image:a})})),a.src=e}))}function d(e){return new Promise(((t,a)=>{const i=new FileReader;i.onloadend=()=>t(i.result),i.readAsDataURL(e)}))}function g(e=0){return new Promise(e?t=>{setTimeout(t,e)}:e=>{i(e)})}async function w({image:e,width:t,height:a}){const i=document.createElement("canvas");i.width=2*t,i.height=2*a;const n=i.getContext("2d");return void 0!==n.mozImageSmoothingEnabled&&(n.mozImageSmoothingEnabled=!1),void 0!==n.oImageSmoothingEnabled&&(n.oImageSmoothingEnabled=!1),void 0!==CanvasRenderingContext2D.webkitImageSmoothingEnabled&&(CanvasRenderingContext2D.webkitImageSmoothingEnabled=!1),void 0!==n.imageSmoothingEnabled&&(n.imageSmoothingEnabled=!1),n.clearRect(0,0,i.width,i.height),await g(),n.drawImage(e,0,0,t,a,0,0,t,a),await g(50),n.scale(-1,1),await g(),n.drawImage(e,0,0,t,a,-i.width,0,t,a),await g(),n.setTransform(1,0,0,1,0,0),await g(50),n.scale(1,-1),await g(),n.drawImage(e,0,0,t,a,0,-i.height,t,a),await g(),n.setTransform(1,0,0,1,0,0),await g(50),n.scale(-1,-1),await g(),n.drawImage(e,0,0,t,a,-i.width,-i.height,t,a),await g(),n.setTransform(1,0,0,1,0,0),await g(),new Promise((e=>{i.toBlob(e)}))}let c={};const l=fetch("/Components/card-template/image-render-worker.js").then((e=>e.text()));export default e((function(e){const{url:a}=e,i=h(r),s=n((e=>{a&&function(e,t=!1){if(c[e])return c[e];if(t)return m(e).then((async t=>{const a=await fetch(e).then((e=>e.blob())),i=await createImageBitmap(a),n=await w({width:t.width,height:t.height,image:i}),o=await d(n);return{width:t.width,height:t.height,b64:o}}));let a;return c[e]=l.then((e=>{const t=`data:text/javascript;base64,${btoa(e)}`;a=new Worker(t)})).then((()=>m(e))).then((async t=>{const i=await fetch(e).then((e=>e.blob())),n=await createImageBitmap(i),o=await new Promise(((e,i)=>{a.onmessage=t=>{a.terminate(),e(t.data)},a.onerror=o=>{a.terminate(),console.warn(o),w({width:t.width,height:t.height,image:n}).then(e,i)},a.postMessage({width:t.width,height:t.height,image:n})})),h=await d(o);return{width:t.width,height:t.height,b64:h}}))}(a,!0===i.state.settings.lowSpecsMode).then(e)}),[a],{});return o((()=>{s.b64&&e.onImageChanged&&e.onImageChanged()}),[e.onImageChanged,s]),t({className:"processed-art "+(a&&!s.b64?"loading":""),style:{"--width":s.width||0,"--height":s.height||0,backgroundImage:s.b64?`url(${s.b64})`:""}},a&&!s.b64?t({className:"icon loading"}):void 0)}),s);