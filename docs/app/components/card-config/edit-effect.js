import factory,{div,label,strong,small}from"/Utils/elements.js";import useLang from"/Utils/use-lang.js";import{useCallback,useState,useRef,useEffect}from"/cdn/react";import{keywords}from"/Components/card-template/keyword-renderer.js";import loadCss from"/Utils/load-css.js";import datauri from"/Utils/datauri.js";import contextMenu from"/Components/context-menu.js";import useCallbackDebounce from"/Utils/use-debounce-callback.js";const cssLoaded=loadCss("/Components/card-config/edit-effect.css");function EditEffectComponent(e){const t=useLang(),n=useRef(),[o,r]=useState(!1);useEffect(()=>{e.value&&!o&&n.current.replaceChildren(generateEditableContent(e.value))},[!!e.value,o]);const a=useCallbackDebounce(()=>{const t=generateSaveableEffectText(n.current);e.updateValue(t)},600,[e.updateValue]),[s,c]=useState(),l=useCallback(()=>{const e=window.getSelection(),t=e.focusNode;e&&(t===n.current||n.current.contains(t))&&c({node:t,offset:e.focusOffset});const o=n.current.querySelectorAll(".keyword-icon-wrapper");o.length&&Array.prototype.forEach.call(o,e=>{e.nextSibling instanceof Text||(e.nextSibling?e.parentNode.insertBefore(document.createTextNode(" "),e.nextSibling):e.parentNode.appendChild(document.createTextNode(" ")))}),r(!0),a()},[a]),d=useCallback(n=>{if(!s)return;const o=s.node,r=t(n);if(o instanceof HTMLDivElement)o.appendChild(createKeywordHtmlElement(n)),o.appendChild(document.createTextNode(r));else if(o instanceof Text){const e=o.splitText(s.offset);e.parentNode.insertBefore(createKeywordHtmlElement(n),e),e.parentNode.insertBefore(document.createTextNode(r),e)}else o.after(createKeywordHtmlElement(n),document.createTextNode(r));e.orangeWords.reduce((e,t)=>e||t===r,!1)||e.updateOrangeWords([...e.orangeWords,r]),a()},[e.updateValue,s,e.orangeWords,e.updateOrangeWords,a]);return label({className:"box edit-effect"},div(strong(e.label)," ",small(t("insert_icon_instruction"))),div({className:"flex column gutter-b-2"},div({className:"gutter-trbl-.5"},contextMenu({className:"react-contextmenu",menu:Object.keys(keywords).filter(e=>keywords[e].length).sort().map(e=>div({onClick:()=>d(e),key:e,className:"react-contextmenu-item"},div({className:"flex vend"},KeywordIcon({name:e}),t(e))))},div({ref:n,contentEditable:!0,className:"textarea box gutter-trbl-.5","data-placeholder":t("insert_icon_instruction"),onInput:l,onFocus:l,onBlur:l})))))}function createKeywordHtmlElement(e){const t=keywords[e],n=document.createDocumentFragment();return t.forEach(t=>{const o=document.createElement("img");o.classList.add("keyword-img"),o.dataset.keywordName=e,n.appendChild(o),datauri("/Assets/keyword/"+t).then(e=>{o.src=e})}),n}function KeywordIconComponent(e){const[t,n]=useState([]);return useEffect(()=>{const t=keywords[e.name].map(e=>datauri("/Assets/keyword/"+e));Promise.all(t).then(n)},[e.name]),div({contentEditable:!1,className:"keyword-icon-wrapper","data-keyword-name":e.name,style:{height:"1em",width:t.length+"em"}},t.map((e,t)=>div({key:t,className:"keyword-icon",style:{backgroundImage:`url(${e})`}})))}const KeywordIcon=factory(KeywordIconComponent);function generateSaveableEffectText(e){return Array.prototype.map.call(e.childNodes,e=>e instanceof HTMLDivElement?"\n"+generateSaveableEffectText(e):e instanceof Text?e.textContent:e instanceof Image?`<${e.dataset.keywordName}/>`:void 0).join("")}const keywordWithIcons=Object.keys(keywords).filter(e=>keywords[e].length);function generateEditableContent(e){let t=[e];keywordWithIcons.forEach(e=>{const n=`<${e}/>`;t=t.map(t=>{if("string"!=typeof t)return t;let o=t.split(n);if(1===o.length)return o[0];for(let t=o.length-1;t;t--)o.splice(t,0,createKeywordHtmlElement(e));return o}).flat()}),t=t.map(e=>{if("string"!=typeof e)return e;let t=e.split(/\n+/g);if(1===t.length)return t[0];for(let e=t.length-1;e;e--)t.splice(e,0,document.createElement("br"));return t}).flat();const n=document.createDocumentFragment();return t=t.forEach(e=>{if("string"!=typeof e)return n.appendChild(e);n.appendChild(new Text(e))}),n}export default factory(EditEffectComponent,cssLoaded);