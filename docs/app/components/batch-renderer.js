import t,{div as e}from"/Utils/elements.js";import i from"/Utils/load-css.js";import{createElement as r,useState as s,useCallback as o}from"/cdn/react";import{typeToComponent as h}from"/Views/list.js";import{svgRefference as n}from"/Views/card-editor.js";import l from"/Components/card-template/svg-wrap.js";const c=i("/Components/batch-renderer.css");export function getResolutionFor(t){return"deck"===t?{width:336,height:512}:"keyword"===t?{width:512,height:512}:{width:680,height:1024}}const a={list:void 0,pairs:{}};export function calculateRowsAndColsForCardsRecursivelyWithCacheUse(t,e=1){if(a.list===t){if(a.pairs[e])return a.pairs[e]}else a.pairs={},a.list=t;const i=t.length,r=Math.ceil(i/e);if(!t.length)return a.pairs[e]={rows:r,cols:e};const s=t.map((t=>getResolutionFor(t.type))).reduce(((t,e)=>t?e.width>t.width?e:t:e)),o=s.width/s.height,h=3*(s.width+1)/s.height,n=s.width/(s.height-1),l=s.width*e/(s.height*r);if(a.pairs[e]={cols:e,rows:r,width:s.width*e,height:s.height*r,resolution:s},3===i){const t=1;return a.pairs[e]={rows:t,cols:3,width:3*s.width,height:s.height*t,resolution:s}}return o===l||(l>h?e>1&&(a.pairs[e]=calculateRowsAndColsForCardsRecursivelyWithCacheUse(t,e-1)):l<n&&(a.pairs[e]=calculateRowsAndColsForCardsRecursivelyWithCacheUse(t,e+1))),a.pairs[e]}export default t((function(t){const i=function(t){const[e,i]=s([...t]),r=[...t];if(e.length!==t.length)return i(r),r;const o=t.length;for(let s=0;s<o;s++)if(e[s]!==t[s])return i(r),r;return e}(t.cards),{width:c,height:a,resolution:d}=calculateRowsAndColsForCardsRecursivelyWithCacheUse(i),u=o((()=>{}),[]);return l({width:c,height:a,loading:t.loading},r(n.Provider,{value:{current:null,setRef:u}},e({className:"cards-grid"},t.cards.map((t=>{const i=h(t.type);return i?e({className:"card",key:t.id,style:{width:`${d.width}px`,height:`${d.height}px`}},i(t)):e({key:t.id})})))))}),c);