import t,{div as i}from"/Utils/elements.js";import r from"/Utils/load-css.js";import{createElement as e,useState as s,useCallback as o}from"/cdn/react";import{typeToComponent as n}from"/Views/list.js";import{svgRefference as h}from"/Views/card-editor.js";import d from"/Components/card-template/svg-wrap.js";const a=r("/Components/batch-renderer.css");const l={list:void 0,pairs:{}};function c(t,i=1){if(l.list===t){if(l.pairs[i])return l.pairs[i]}else l.pairs={},l.list=t;const r=t.length,e=Math.ceil(r/i);if(!t.length)return l.pairs[i]={rows:e,cols:i};const s=t.map((t=>"keyword"===t.type?{width:512,height:512}:{width:680,height:1024})).reduce(((t,i)=>t?i.width>t.width?i:t:i)),o=s.width/s.height,n=s.width*i/(s.height*e);return l.pairs[i]={cols:i,rows:e,width:s.width*i,height:s.height*e,resolution:s},o===n||(n>2*o?i>1&&(l.pairs[i]=c(t,i-1)):n<.75*o&&(l.pairs[i]=c(t,i+1))),l.pairs[i]}export default t((function(t){const r=function(t){const[i,r]=s([...t]),e=[...t];if(i.length!==t.length)return r(e),e;const o=t.length;for(let s=0;s<o;s++)if(i[s]!==t[s])return r(e),e;return i}(t.cards),{width:a,height:l,resolution:p}=c(r),m=o((()=>{}),[]);return d({width:a,height:l,loading:t.loading},e(h.Provider,{value:{current:null,setRef:m}},i({className:"cards-grid"},t.cards.map((t=>{const r=n(t.type);return r?i({className:"card",key:t.id,style:{width:`${p.width}px`,height:`${p.height}px`}},r(t)):i({key:t.id})})))))}),a);