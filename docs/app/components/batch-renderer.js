import factory,{div}from"/Utils/elements.js";import loadCss from"/Utils/load-css.js";import{createElement,useState,useCallback}from"/cdn/react";import{typeToComponent}from"/Views/list.js";import{svgRefference}from"/Views/card-editor.js";import SvgWrap from"/Components/card-template/svg-wrap.js";const cssLoaded=loadCss("/Components/batch-renderer.css");function getResolutionFor(e){return"keyword"===e?{width:512,height:512}:{width:680,height:1024}}const calculationCache={list:void 0,pairs:{}};function calculateRowsAndColsForCardsRecursivelyWithCacheUse(e,t=1){if(calculationCache.list===e){if(calculationCache.pairs[t])return calculationCache.pairs[t]}else calculationCache.pairs={},calculationCache.list=e;const a=e.length,i=Math.ceil(a/t);if(!e.length)return calculationCache.pairs[t]={rows:i,cols:t};const s=e.map(e=>getResolutionFor(e.type)).reduce((e,t)=>e?t.width>e.width?t:e:t),o=s.width/s.height,c=s.width*t/(s.height*i);return calculationCache.pairs[t]={cols:t,rows:i,width:s.width*t,height:s.height*i,resolution:s},o===c||(c>2*o?t>1&&(calculationCache.pairs[t]=calculateRowsAndColsForCardsRecursivelyWithCacheUse(e,t-1)):c<.75*o&&(calculationCache.pairs[t]=calculateRowsAndColsForCardsRecursivelyWithCacheUse(e,t+1))),calculationCache.pairs[t]}function useOldListIfNothingChanged(e){const[t,a]=useState([...e]),i=[...e];if(t.length!==e.length)return a(i),i;const s=e.length;for(let o=0;o<s;o++){if(t[o]!==e[o])return a(i),i}return t}function BatchRendererComponent(e){const t=useOldListIfNothingChanged(e.cards),{width:a,height:i,resolution:s}=calculateRowsAndColsForCardsRecursivelyWithCacheUse(t),o=useCallback(()=>{},[]);return SvgWrap({width:a,height:i,loading:e.loading},createElement(svgRefference.Provider,{value:{current:null,setRef:o}},div({className:"cards-grid"},e.cards.map(e=>{const t=typeToComponent(e.type);return t?div({className:"card",key:e.id,style:{width:s.width+"px",height:s.height+"px"}},t(e)):div({key:e.id})}))))}export default factory(BatchRendererComponent,cssLoaded);