import{getRitoPoCItemRelic as t,patchRitoPocItemRelic as e,getLatestPoCItemRelicData as i}from"/Utils/service.js";import s from"/Utils/use-asset-cache.js";import r,{mergeDeep as l}from"/Utils/use-filter.js";import{useState as o,useCallback as c,useEffect as n,useMemo as a,useContext as f}from"/cdn/react";import m from"/Components/deck/hooks/get-filter-options-form-card-list.js";import{Globals as h}from"/Views/index.js";export default function p(){const[p,u]=o({items:[],relics:[]}),d=f(h);n((()=>{t({},{items:[],relics:[]}).then(u)}),[]);const[w,L]=o(!1),g=c((()=>{w||(L(!0),i({},d.state.settings.lang).then((async t=>{await e(t),u(t),L(!1)})))}),[w]),[C,F,j,y]=r({name:{filter:(t,e)=>!t||e.toLowerCase().includes(t.toLowerCase())},descriptionRaw:{filter:(t,e)=>!t||e.toLowerCase().includes(t.toLowerCase())},rarity:{filter:(t,e)=>!t||!t.length||t.includes(e)}});n((()=>{if(p.items&&p.items.length)return F(p.items);F([])}),[p.items]);const O=s((t=>{if(!p.items||!p.items.length)return;t(m(p.items))}),[p.items],{}),U=c(((t,e)=>{const i={};i[t]=e,y(i)}),[y]),[k,x,R,v]=r({name:{filter:(t,e)=>!t||e.toLowerCase().includes(t.toLowerCase())},descriptionRaw:{filter:(t,e)=>!t||e.toLowerCase().includes(t.toLowerCase())},rarity:{filter:(t,e)=>!t||!t.length||t.includes(e)}});n((()=>{if(p.relics&&p.relics.length)return x(p.relics);x([])}),[p.relics]);const V=s((t=>{if(!p.relics||!p.relics.length)return;t(m(p.relics))}),[p.relics],{}),b=c(((t,e)=>{const i={};i[t]=e,v(i)}),[v]),q=c((function(){y.call(this,...arguments),v.call(this,...arguments)}),[y,v]),z=c((function(){U.call(this,...arguments),b.call(this,...arguments)}),[U,b]),A=a((()=>l({},O,V)),[O,V]),B=a((()=>l({},j,R)),[j,R]);return{item:{list:p.items,filteredList:C,currentFilters:j,patchFilter:U,patchFilters:y,filterOptions:O},relic:{list:p.relics,filteredList:k,currentFilters:R,patchFilter:b,patchFilters:v,filterOptions:V},refreshList:g,loading:w,currentFilters:B,patchFilter:z,patchFilters:q,filterOptions:A}}