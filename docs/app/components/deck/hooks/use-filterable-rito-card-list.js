import{useState as e,useCallback as t,useEffect as r}from"/cdn/react";import{getRitoCards as o,patchRitoCards as s,getLatestRitoData as i}from"/Utils/service.js";import n from"/Utils/use-filter.js";import l from"/Utils/use-asset-cache.js";import a from"/Components/deck/hooks/get-filter-options-form-card-list.js";export function getRitoCardsFromDataDump({sets:e}){if(!e)return;const t=e.map((e=>e.data)).flat();return t.sort(((e,t)=>{if("champion"===e.supertype.toLowerCase()&&"champion"!==t.supertype.toLowerCase())return-1;if("champion"!==e.supertype.toLowerCase()&&"champion"===t.supertype.toLowerCase())return 1;const r=e.cost-t.cost;if(r)return r;const o=t.collectible-e.collectible;if(o)return o;const s=e.name.localeCompare(t.name);return s||0})),t}export default function c(c){const[u,p]=e();r((()=>{o().then((e=>{let t;p(t=getRitoCardsFromDataDump(e)),t.forEach((e=>{e&&(c.current[e.cardCode]=e)}))}))}),[]);const[f,d]=e(!1),m=t((()=>{f||(d(!0),i().then((async e=>{await s(e),p(getRitoCardsFromDataDump(e)),d(!1)})))}),[f]),[h,C,w,L]=n({collectible:{value:!0,filter:(e,t)=>t===e},name:{filter:(e,t)=>!e||t.toLowerCase().includes(e.toLowerCase())},descriptionRaw:{filter:(e,t,r)=>!e||(t.toLowerCase().includes(e.toLowerCase())||r.levelupDescriptionRaw.toLowerCase().includes(e.toLowerCase())||r.description.toLowerCase().includes(e.toLowerCase())||r.levelupDescription.toLowerCase().includes(e.toLowerCase()))},subtypes:{filter:(e,t)=>!e||Array.prototype.some.call(t,(t=>t.toLowerCase().includes(e.toLowerCase())))},type:{filter:(e,t)=>!e||!e.length||e.includes(t)},set:{filter:(e,t)=>!e||!e.length||e.includes(t)},keywords:{filter:(e,t)=>!e||!e.length||t.some((t=>e.includes(t)))},rarity:{filter:(e,t)=>!e||!e.length||e.includes(t)},regionRefs:{filter:(e,t)=>!e||!e.length||e.some((e=>t.includes(e)))},spellSpeed:{filter:(e,t)=>!e||!e.length||e.includes(t)},cost:{filter:(e,t)=>{if(!e||!e.length)return!0;const[r,o]=e;return t<=o&&t>=r}},attack:{filter:(e,t,r)=>{if(!e||!e.length)return!0;if("unit"!==(r.type||"").toLowerCase())return!1;const[o,s]=e;return t<=s&&t>=o}},health:{filter:(e,t,r)=>{if(!e||!e.length)return!0;if("unit"!==(r.type||"").toLowerCase())return!1;const[o,s]=e;return t<=s&&t>=o}}});r((()=>{if(!u||!u.length)return C([]);C(u)}),[u]);const g=t(((e,t)=>{const r={};r[e]=t,L(r)}),[L]),y=l((e=>{if(!(u&&u.length&&h&&h.length))return;const t=a(u);t.set.sort(((e,t)=>e.localeCompare(t)));const r=a(h);e({...t,keywords:r.keywords})}),[u,h],{});return{cardList:u,loading:f,refreshList:m,filteredCardList:h,currentFilters:w,patchFilter:g,patchFilters:L,filterOptions:y}}