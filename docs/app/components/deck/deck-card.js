import e from"/Components/card-template/svg-wrap.js";import{createElement as t}from"/cdn/react";import{isRitoCard as r}from"./card-name.js";import s,{div as o}from"/Utils/elements.js";import{getRitoCardImage as c,getCard as a}from"/Utils/service.js";import n from"/Utils/load-css.js";import{typeToComponent as d}from"/Views/list.js";import i from"/Utils/use-asset-cache.js";const m=n("/Components/deck/deck-card.css"),l=[];export default s((function(e){const[t,s,c]=i((t=>{const s=[];for(let t=1;t<(e.count||1);s.push(void 0),t++);if(r(e.card)){const r=InDeckRitoCard(e.card);t([r,r,s])}else a(e.card.id).then((e=>{const r=InDeckCustomCard(e),o=InDeckCustomCard({...e,name:void 0,blueWords:l,orangeWords:l,effectText:"",levelText:"",keywords:l});t([r,o,s])}))}),[e.card,e.count],[void 0,void 0,[]]);return o({style:{width:(e.cardSize||{}).width,height:(e.cardSize||{}).height},className:"in-deck-card-stack"},o({className:"in-deck-card-stack-sizer"},c.map(((t,r)=>o({key:r,className:"shadow-card",style:{transform:`translate(${-Math.min(50,100/(e.count-1||1))*(r+1)}px, ${-Math.min(50,100/(e.count-1||1))*(r+1)}px)`}},s))).reverse(),o({className:"real-card"},t)))}),m);export const InDeckRitoCard=s((function(t){const r=t.cardCode,s=t.set,a=i((e=>{c(s,r).then(e)}),[r,s]);return e({loading:!a},a?o({className:"in-deck-rito-card",style:{backgroundImage:`url(${a})`}}):void 0)}),m);export const InDeckCustomCard=s((function(e){return i((t=>{t(d(e.type)(e))}),Object.keys(e).map((t=>e[t])))}),m);