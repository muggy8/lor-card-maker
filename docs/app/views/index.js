import{useState as t,useCallback as e,useEffect as n,useRef as o,createContext as r,createElement as i}from"/cdn/react";import s from"/Utils/elements.js";import a from"/Views/list.js";import{BannerBar as c,SideBar as l}from"/Components/index.js";import{getSettings as p,saveSettings as u,getCardList as v}from"/Utils/service.js";export const Globals=r({lang:"en",card:null});export let navigationHistory=[];export default s((function(r){const[s,g]=t({lang:"en",view:a,defaultBg:!0,settings:{}});let d={...s};const w=e((t=>{let e={...d,...t};Object.keys(e).forEach((t=>{void 0===e[t]&&delete e[t]})),d=e;Object.keys(e).map((t=>e[t]!==s[t])).reduce(((t,e)=>t||e),!1)&&g(e)}),[s,g]);n((()=>{p().then((t=>w({settings:t})))}),[]);const[h,y]=t([]),m=e((()=>v().then((t=>t.filter((t=>"keyword"===t.type)))).then(y)),[]);n((()=>{m()}),[]);const f=e((t=>{const e={...s.settings,...t};w({settings:e}),u(e)}),[s.settings,w]),H=o();n((()=>{H.current=w}),[w]);const b=o((()=>!0));n((()=>{navigationHistory.push(s.view);const t=function(t){if(!1===b.current())return t.preventDefault(),t.stopPropagation(),void history.pushState({},"");navigationHistory.splice(-1,1);const e=navigationHistory[navigationHistory.length-1];if(!e)return navigationHistory.push(s.view),H.current({view:a});m(),H.current({view:e})};return window.addEventListener("popstate",t),function(){window.removeEventListener("popstate",t)}}),[]);const j=e((t=>{window.scrollTo(0,0),requestAnimationFrame((()=>{H.current({view:t}),history.pushState({},""),navigationHistory.push(t)}))}),[]);return n((()=>{if(!r.root)return;const t=(s.bannerHeight||0)+"px";r.root.style.setProperty("padding-top",t),r.root.style.setProperty("--banner-height",t)}),[s.bannerHeight,r.root]),i(Globals.Provider,{value:{state:s,setState:g,patchState:w,setView:j,patchSettings:f,allowBack:b.current,customKeywords:h,setAllowBack:t=>{b.current=t}}},c(),l(),s.view())}));