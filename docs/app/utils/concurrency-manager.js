export default function n(){let n=[],t=[];const c={concurrent:function(e,...o){const s=e(...o);function r(){const e=n.findIndex((n=>n===s));if(n.splice(e,1),0===n.length){const n=t.shift();n&&c.concurrent(n.callback,...n.args)}}!s instanceof Promise?r():(s.then(r,r),n.push(s))},sequential:function(e,...o){n.length?t.push({callback:e,args:o}):c.concurrent(e,...o)}};return c}