import{useEffect as e,useState as t,useCallback as r}from"/cdn/react";export default function n(n){const[c,o]=t([]),[i,s]=t([]),[f,l]=t(n||{});let p={};const a=r((e=>{p=mergeDeep(p,e);const t=mergeDeep({},f,p);l(t)}),[f]);return e((()=>{const e=Object.keys(f),t=Array.prototype.filter.call(c||[],(t=>{let r=!0;return null!=t&&(e.forEach((e=>{if(!r)return;const n=f[e];n.filter&&Object.prototype.hasOwnProperty.call(n,"value")&&(r=r&&n.filter(n.value,t[e],t))})),r)}));s(t)}),[c,f]),[i,o,f,a]}export function isObject(e){return e&&"object"==typeof e&&!Array.isArray(e)}export function mergeDeep(e,...t){if(!t.length)return e;const r=t.shift();if(isObject(e)&&isObject(r))for(const t in r)isObject(r[t])?(e[t]||Object.assign(e,{[t]:{}}),mergeDeep(e[t],r[t])):Object.assign(e,{[t]:r[t]});return mergeDeep(e,...t)}