const e=location.pathname.replace(/[^\/]+\.js$/,""),t=location.origin+e,s=location.origin+"/",n={target:"es2018","no-dts":!0,sourcemap:!1,pin:"v95"};t.includes("localhost")&&(n.dev=!0);const a={cdn:{react:{url:"https://esm.sh/react@18.2.0",query:n},"react-dom":{url:"https://esm.sh/react-dom@18.2.0",query:{...n,deps:"react@18.2.0"}},"flex-box":"https://cdn.jsdelivr.net/gh/muggy8/flex-box@f1c7d23fad7ece8fc7538b152ac393a29b65669b","mmc-3":"https://cdn.jsdelivr.net/gh/muggy8/mmc-3@374aa14106e6133f758cf68f2cb9e35b5392cfe5",fitty:{url:"https://esm.sh/fitty@2.3.6",query:n},setimmediate:{url:"https://esm.sh/setimmediate@1.0.5",query:n},"fast-average-color":{url:"https://esm.sh/fast-average-color@9.1.1",query:n},"save-svg-as-png":{url:"https://esm.sh/save-svg-as-png@1.4.17",query:n},gesto:{url:"https://esm.sh/gesto@1.13.3",query:n},"react-input-range":{url:"https://esm.sh/react-input-range@1.3.0",query:n},"react-contextmenu":{url:"https://esm.sh/react-contextmenu@2.14.0",query:n},"react-jsx-context-menu":{url:"https://esm.sh/react-jsx-context-menu@1.0.10",query:n},"react-use-pwa-install":{url:"https://esm.sh/react-use-pwa-install@0.2.1",query:n}},App:t+"app",Views:t+"app/views",Utils:t+"app/utils",Components:t+"app/components",Assets:t+"app/assets"};self.addEventListener("install",(function(e){e.waitUntil(Promise.all([self.skipWaiting(),u(t)]).then(p))})),self.addEventListener("activate",(function(e){e.waitUntil(clients.claim())}));const r="pseudo-api/card/";async function i(e,t){let s=await caches.open("cards"),n=await s.match(t);if(n){t.url&&(t=t.url);const[e,s]=t.match(c);let a=await n.json();return a.id=s,new Response(JSON.stringify(a),{"Content-Type":"application/json",status:200})}return new Response("{}",{"Content-Type":"application/json",status:200})}self.addEventListener("fetch",(function(e){const n=e.request.url.replace(s,""),p=e.request.url.replace(t,"")||t,l=function(e){const t=o(e.split("/"),a);if(t)return t;return e}(n);if(l)if(n.startsWith("pseudo-api")){let t=!1;"POST"===e.request.method||"PUT"===e.request.method?(n.includes(r)&&(e.respondWith(async function(e,t){let s=await e.text(),n=await caches.open("cards"),a=new Response(s,{"Content-Type":"application/json",status:200});return await n.put(t,a.clone()),a}(e.request,n)),t=!0),n.includes("pseudo-api/settings/")&&(e.respondWith(async function(e,t){let s=await e.text(),n=await caches.open("settings"),a=new Response(s,{"Content-Type":"application/json",status:200});return await n.put(t,a.clone()),a}(e.request,n)),t=!0)):"GET"===e.request.method?n.includes("pseudo-api/card-list/")?(e.respondWith(async function(e,t){let s=await caches.open("cards"),n=(await s.keys()).filter((e=>e.url.includes(r))).map((e=>{let[t,s]=e.url.match(c);return s}));n.reverse();let a=n.map((async e=>{let t=await i(void 0,r+e).then((e=>e.json()));return t.id=e,t})),o=await Promise.all(a);return new Response(JSON.stringify(o),{"Content-Type":"application/json",status:200})}(e.request)),t=!0):n.includes(r)?(e.respondWith(i(e.request,n)),t=!0):n.includes("pseudo-api/settings/")&&(e.respondWith(async function(e,t){let s=await caches.open("settings"),n=await s.match(t);if(n)return n;return new Response("{}",{"Content-Type":"application/json",status:200})}(e.request,n)),t=!0):"DEL"===e.request.method&&n.includes(r)&&(e.respondWith(async function(e,t){let s=await caches.open("cards");return await s.delete(t),new Response("{}",{"Content-Type":"application/json",status:200})}(e.request,n)),t=!0),!t&&e.respondWith(new Response("Not found",{"Content-Type":"text/plain",status:404}))}else l===n?e.respondWith(u(p)):e.respondWith(u(l,n.startsWith("cdn")));else e.respondWith(u(e.request))}));const c=/\/([^\/]+)\/?$/;function o(e,t){if(!e||!e.length||!t)return;const s=e[0],n=e.slice(1),a=t[s];if("string"==typeof a||"object"==typeof a&&"string"==typeof a.url){let e=["string"==typeof a?a:a.url,...n].join("/");if(a.query){let t=Object.keys(a.query).map((e=>`${e}=${a.query[e]}`)).join("&");e.endsWith(".css")&&(t+="&css=true"),e=e+"?"+t}return e}return o(n,a)}async function u(e,t=!1){let s,n=e.url||e;if(n.includes("://")&&!n.startsWith("http"))return fetch(e);const a=await caches.open("react-cache");if(t&&(s=await a.match(e),s))return s;if(s=await a.match(e)){let t,n=s.headers.get("etag"),a=s.headers.get("last-modified");try{t=await fetch(e,{method:"HEAD"})}catch(e){return console.warn(e),s}if(t&&t.headers){if(n&&t.headers.get("etag")===n)return s;if(a&&t.headers.get("last-modified")===a)return s}console.log("asset needs refreshing",e)}try{let t=await fetch(e);return t.ok?(await a.put(e,t.clone()),t):s}catch(e){return s}}async function p(){let e=await caches.open("cards"),t=(await e.keys()).filter((e=>e.url.includes("pseudo-api/card-list/")));if(!t.length)return;let s={};const n=t.map((async t=>{const[n,a]=t.url.match(c);s[a]=await e.match(t).then((e=>e.json()))}));await Promise.all(n);const a=Object.keys(s).map((async t=>{const n=s[t].reduce((async(s,n)=>{const a=r+n;await s;let c=await i(0,a).then((e=>e.json()));if(c.dataVersion&&c.dataVersion>1)return;c.type=t,c.dataVersion=2,c.rarity&&(c.rarity.includes("gemless")||c.rarity.includes("none"))&&(c.rarity="");const o=new Response(JSON.stringify(c),{"Content-Type":"application/json",status:200});return e.put(a,o)}),Promise.resolve());return await n,e.delete("pseudo-api/card-list/"+t)}));await Promise.all(a)}