!function(t){let e=App.unitController=Object.create(App.baseBuilderController);e.clearCard=function(){let t=this,e=t.card=t.card||{};t.cardId="",e.name="",e.clan="",e.effect="",e.effectHeight=0,e.lvup="",e.lvupHeight=0,e.keywords=[],e.mana=0,e.art="",e.transform={x:0,y:0,scale:1},e.rarity="gemless",e.power=0,e.health=0,e.faction=[],e.blueWords=[],e.orangeWords=[],e.effectFontSize=34,e.levelFontSize=34,e.artist="",t.exporting=!1,t.cardId=""},e.createPreview=function(t){let e=this,r=t||e.card;r.effectFontSize=34,r.levelFontSize=34;let n=r.keywords.length>1?r.keywords.map(t=>createMiniKeyword("./assets/symbol/"+cardOptionsData.icons[t])):r.keywords.map(t=>createWideKeyword(t,"./assets/symbol/"+cardOptionsData.icons[t]));if(n.lenght<=0)n="";else if(1===n.lenght)n=` <gtransform="translate(${340-n[0].width/2}, 425)"> ${n[0].content} </g>`;else{let t=340-n.reduce((t,e)=>t+e.width,0)/2,e=0;n=n.reduce((r,n)=>{let a=r+` <g transform="translate(${t+e}, 425)"> ${n.content} </g>`;return e+=n.width,a},"")}let a=` <svg width="680" height="1024" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 680 1024" class="{:this.app.cardInstance = this:}" > ${e.artMask} ${r.art?` <image id="card-art-${e.cardId}" clip-path="url(#art-mask-${e.cardId})" xlink:href="${r.art}" x="{:this.app.card.transform.x:}|{card.transform.x}|" y="{:this.app.card.transform.y:}|{card.transform.y}|" preserveAspectRatio="xMidYMid meet" width="{:680 * this.app.card.transform.scale:}|{card.transform.scale}|" height="{:1024 * this.app.card.transform.scale:}|{card.transform.scale}|" />`:""} <image id="art-shade-${e.cardId}" clip-path="url(#art-mask)" width="680" height="1024" x="0" y="0" xlink:href="./assets/common/theencrouchingdarkness.png"/> <image id="card-frame-${e.cardId}" width="680" height="1024" x="0" y="0" xlink:href="${e.rendererOptions.framePath}${r.rarity}.png"/> ${r.faction.length?` <image id="card-region-box-${e.cardId}" width="120" height="360" x="${550+(e.rendererOptions.region.offsetLeft||0)-(e.rendererOptions.region.offsetRight||0)}" y="${37+(e.rendererOptions.region.offsetTop||0)-(e.rendererOptions.region.offsetBottom||0)}" href="${e.rendererOptions.region.bgPath}${r.faction.length<3?r.faction.length:3}.png"/> <image id="card-region-1-${e.cardId}" width="90" height="90" x="${567+(e.rendererOptions.region.offsetLeft||0)-(e.rendererOptions.region.offsetRight||0)}" y="${66+(e.rendererOptions.region.offsetTop||0)-(e.rendererOptions.region.offsetBottom||0)}" href="./assets/regions/${r.faction[0]}.png"/>`:""} ${r.faction.length>1?`<image id="card-region-1-${e.cardId}" width="90" height="90" x="${567+(e.rendererOptions.region.offsetLeft||0)-(e.rendererOptions.region.offsetRight||0)}" y="${156+(e.rendererOptions.region.offsetTop||0)-(e.rendererOptions.region.offsetBottom||0)}" href="./assets/regions/${r.faction[1]}.png"/>`:""} ${r.faction.length>2?`<image id="card-region-1-${e.cardId}" width="90" height="90" x="${567+(e.rendererOptions.region.offsetLeft||0)-(e.rendererOptions.region.offsetRight||0)}" y="${246+(e.rendererOptions.region.offsetTop||0)-(e.rendererOptions.region.offsetBottom||0)}" href="./assets/regions/${r.faction[2]}.png"/>`:""} ${r.clan?` <image id="card-clan-${e.cardId}" width="360" height="84" x="160" y="14" xlink:href="${e.rendererOptions.clan.bgPath}"/> <rect id="clan-text-area-${e.cardId}" width="200" height="46" x="240" y="32" opacity="0"/> <text class="bold caps {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true, {valign: 'middle'})).catch(()=>{}):}" font-size="36" fill="#fff" stroke="#fff">${r.clan}</text>`:""} <rect id="mana-cost-${e.cardId}" width="120" height="120" x="31" y="44" opacity="0"/> <text class="key-text {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true, {valign: 'middle'})).catch(()=>{}):}" font-size="50" fill="#fff" stroke="#fff">${r.mana}</text> ${Object.prototype.hasOwnProperty.call(r,"power")?`<rect id="power-${e.cardId}" width="86" height="82" x="44" y="873" opacity="0"/> <text class="key-text {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true, {valign: 'middle'})).catch(()=>{}):}" font-size="50" fill="#fff" stroke="#fff">${r.power}</text>`:""} ${Object.prototype.hasOwnProperty.call(r,"health")?`<rect id="health-${e.cardId}" width="86" height="82" x="552" y="873" opacity="0"/> <text class="key-text {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true, {valign: 'middle'})).catch(()=>{}):}" font-size="50" fill="#fff" stroke="#fff">${r.health}</text>`:""} <g id="all-text-group-${e.cardId}" transform="translate(0, {: ${!!r.lvup} ? ( 130 - this.app.card.lvupHeight > 0 ? 130 - this.app.card.lvupHeight : 0 ) : 174 :}|{card.lvupHeight}|)"> <foreignObject style="background-color: rgba(0,0,0,0);" id="level-up-condition-${e.cardId}" width="510" height="130" x="85" y="720"> <div xmlns="http://www.w3.org/1999/xhtml" style="font-size:{:this.app.card.levelFontSize:}|{card.levelFontSize}|px; text-align: center; overflow: hidden; max-height: 100%; color: #d6946b" data-init="{:proxymity.on.renderend.then(()=>this.app && this.app.effectResize(this, 'levelFontSize')).then(()=>this.app && (this.app.card.lvupHeight = this.scrollHeight || this.app.card.lvupHeight)):}">${e.decorateText(r.lvup)}</div> </foreignObject> ${r.lvup?'<image id="card-level-bar-${controller.cardId}" width="680" height="44" x="0" y="680" xlink:href="./assets/champion/levelupbar.png"/>':""} <g id="effect-group-${e.cardId}" transform="translate(0, {: 162 - this.app.card.effectHeight > 0 ? 162 - this.app.card.effectHeight : 0:}|{card.effectHeight}|)"> <foreignObject style="background-color: rgba(0,0,0,0);" id="effect-${e.cardId}" width="510" height="162" x="85" y="520"> <div xmlns="http://www.w3.org/1999/xhtml" style="font-size:{:this.app.card.effectFontSize:}|{card.effectFontSize}|px; text-align: center; overflow: hidden; max-height: 100%; color: #fff" data-init="{:proxymity.on.renderend.then(()=>this.app && this.app.effectResize(this, 'effectFontSize')).then(()=>this.app && (this.app.card.effectHeight = this.scrollHeight || this.app.card.effectHeight) ):}">${e.decorateText(r.effect)}</div> </foreignObject> \x3c!-- <rect id="keywords-${e.cardId}" width="560" height="70" fill="#CFF" x="60" y="450" opacity="0.75"/> --\x3e ${n} <rect id="name-${e.cardId}" width="510" height="70" x="85" y="${r.keywords.length?380:450}" opacity="0"/> ${r.name?`<text class="key-text {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true)).catch(()=>{}):}" font-size="36" fill="#fff" stroke="#fff" font-style="900">${r.name?r.name.toUpperCase():""}</text>`:""} </g> </g> <rect id="artist-${e.cardId}" width="280" height="30" fill="#FFF" x="12" y="990" opacity="0"/> ${r.artist?`<text class="key-text {:proxymity.on.renderend.then(()=>this.app.wrapText(this, true, {align:'left'})).catch(()=>{}):}" font-size="36" fill="#fff" stroke="#fff" font-style="900">‚úç: ${r.artist?r.artist:""}</text>`:""} <g class="{:!${!!r.art} || this.app.exporting ? 'hide' : '' :}|{exporting}|"> <path d=" M 340, 10 l 35, 60 h -70 Z " fill="#fff" opacity="0.8" id="arrow-up-${e.cardId}" onclick="this.app.card.transform.y -= 10" class="clickable" /> <path d=" M 340, 980 l 35, -60 h -70 Z " fill="#fff" opacity="0.8" id="arrow-down-${e.cardId}" onclick="this.app.card.transform.y += 10" class="clickable" /> <path d=" M 0, 550 l 60, -35 v 70 Z " fill="#fff" opacity="0.8" id="arrow-left-${e.cardId}" onclick="this.app.card.transform.x -= 10" class="clickable" /> <path d=" M 680, 550 l -60, -35 v 70 Z " fill="#fff" opacity="0.8" id="arrow-right-${e.cardId}" onclick="this.app.card.transform.x += 10" class="clickable" /> <text font-size="156" x="180" y="345" fill="#fff" stroke="#fff" opacity="0.8" class="clickable" onclick="this.app.card.transform.scale += 0.05">+</text> <text font-size="156" x="440" y="345" fill="#fff" stroke="#fff" opacity="0.8" class="clickable" onclick="this.app.card.transform.scale -= 0.05">-</text> </g> </svg>`;try{let t=proxymity(a,e);return t.when.detach((async function(){t.unlink()})),t}catch(t){console.warn(t)}},e.gemOptions=void 0,e.template=void 0,Object.defineProperty(e,"artMask",{configurable:!0,enumerable:!0,get:function(){return` <clipPath id="art-mask-${this.cardId}"> <path d=" M 25, 50 h 630 v 900 l -315, 15 l -315, -15 Z " /> </clipPath> `}}),e.generateView=function(){let t=this;t.clearCard();let e=t.card,r=Object.keys(t.generateView.watcherList).map(r=>Object.prototype.hasOwnProperty.call(e,r)?`{${t.generateView.watcherList[r]}}`:null);r.push("{attached}"),r.filter(t=>!!t).join(",");let n=` <main class="flex hcenter"> <div class="card-preview gutter-t-4 gutter-rl-.5 box-xs-12 box-s-8 box-m-6 box-l-4 box-xl-3"> {:this.app.attached && this.app.createPreview(undefined, this):}|${r}| <div class="flex hcenter gutter-tb"> <button onclick="this.app.exportCard()">Export</button> <div class="gutter-rl"></div> <button onclick="this.app.saveCard()">Save Card</button> <div class="gutter-rl"></div> <button onclick="this.app.deleteCard()" class="{:this.app.cardId ? '' : 'hide':}|{cardId}|">Delete Card</button> </div> <div class="gutter-b-3"></div> </div> <div class="card-configs gutter-rl-.5 box-xs-12 box-s-8 box-m-6 box-l-4 box-xl-3"> {:this.app.cardOptionsController = App.cardOptions(this.app.card, ${JSON.stringify(t.gemOptions)}):} </div> </main> `;return proxymity(n,t)},e.generateView.watcherList={name:"card.name",effect:"card.effect",lvup:"card.lvup",keywords:"card.keywords.length",mana:"card.mana",art:"card.art",rarity:"card.rarity",faction:"card.faction.length",clan:"card.clan",blueWords:"card.blueWords.*",orangeWords:"card.orangeWords.*",power:"card.power",health:"card.health",artist:"card.artist"}}();