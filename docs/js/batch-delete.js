!function(t){let e=App.batchDelete=Object.create(App.baseBuilderController),i=proxymity('\n    <main class="flex hcenter">\n\n        <div class="export-preview gutter-t-4 gutter-rl-.5 box-xs-12 box-s-8 box-m-6 box-l-4 box-xl-3">\n            <div class="gutter-rl-2 gutter-tb-4 box-12 flex vhcenter">\n                <button class="box-12 clickable" onclick="this.app.deleteSelected(this.app.cardsToDelete)">\n                    <div class="icon {:!this.app.exporting ? \'hide\' : \'\' :}|{exporting}|">\n                        <i class="loading"></i>\n                    </div>\n                    <span class="{:this.app.exporting ? \'hide\' : \'\' :}|{exporting}|" >\n                        {:App.lang[App.langChoice].delete_selected:}\n                    </span>\n                </button>\n            </div>\n        </div>\n\n        <div class="gutter-rl-.5 box-xs-12 box-s-8 box-m-6 box-l-4 box-xl-3">\n            <div class="gutter-tb gutter-rl-.5 flex"> \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedChampions1[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedChampions1[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedChampions1[this.index].id]}|" onclick="this.app.toggleDelete(App.championLv1Builder, this.app.savedChampions1[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedChampions1[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedChampions1[this.index].cardData, App.championLv1Builder, this.app.savedChampions1[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedChampions1 --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedChampions2[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedChampions2[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedChampions2[this.index].id]}|" onclick="this.app.toggleDelete(App.championLv2Builder, this.app.savedChampions2[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedChampions2[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedChampions2[this.index].cardData, App.championLv2Builder, this.app.savedChampions2[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedChampions2 --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedChampions3[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedChampions3[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedChampions3[this.index].id]}|" onclick="this.app.toggleDelete(App.championLv3Builder, this.app.savedChampions3[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedChampions3[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedChampions3[this.index].cardData, App.championLv3Builder, this.app.savedChampions3[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedChampions3 --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedLandmarks[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedLandmarks[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedLandmarks[this.index].id]}|" onclick="this.app.toggleDelete(App.landmarkBuilder, this.app.savedLandmarks[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedLandmarks[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedLandmarks[this.index].cardData, App.landmarkBuilder, this.app.savedLandmarks[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedLandmarks --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedSpells[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedSpells[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedSpells[this.index].id]}|" onclick="this.app.toggleDelete(App.spellBuilder, this.app.savedSpells[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedSpells[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedSpells[this.index].cardData, App.spellBuilder, this.app.savedSpells[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedSpells --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedFollowers[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedFollowers[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedFollowers[this.index].id]}|" onclick="this.app.toggleDelete(App.followerBuilder, this.app.savedFollowers[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedFollowers[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedFollowers[this.index].cardData, App.followerBuilder, this.app.savedFollowers[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedFollowers --\x3e \x3c!-- forEach: "index" --\x3e \x3c!-- key: function(item, index, whole){ return item.id } --\x3e\n                \x3c!-- {:this.app.cardsToDelete[this.app.savedKeywords[this.index].id] = false:} --\x3e <div class="gutter-trbl-.5 box-xs-4 box-sm-6 box-xl-4 flex column vhcenter clickable {: this.app.cardsToDelete[this.app.savedKeywords[this.index].id] ? \'\' : \'ghost\' :}|{cardsToDelete[this.app.savedKeywords[this.index].id]}|" onclick="this.app.toggleDelete(App.keywordBuilder, this.app.savedKeywords[this.index])"> <strong>{:App.lang[App.langChoice].include:}  {: this.app.savedKeywords[this.index].cardData.name :}</strong> <div> {:this.app.attached && this.app.createPreview(this.app.savedKeywords[this.index].cardData, App.keywordBuilder, this.app.savedKeywords[this.index].id) :}|{attached}| </div> </div> \x3c!-- in: savedKeywords --\x3e </div>\n        </div>\n    </main>\n',e),a=e.cardsToDelete={};e.exporting=!1,e.focus=function(){App.currentView!==i&&(App.currentView=i,window.scroll(0,0),history.pushState({focus:"batchDelete"},"Batch Delete"),App.getSavedCards(e))},e.createPreview=App.batchExporter.createPreview,e.toggleDelete=function(t,e){let i=e.id;a[i]?a[i]=!1:a[i]={hostController:t,cardData:e.cardData}},e.deleteSelected=async function(t){e.exporting=!0;let i=Object.keys(t).map(e=>{let i=t[e];return i?i.hostController.deleteCard(e):Promise.resolve()});await Promise.all(i),e.exporting=!1,window.location.reload()}}();